{"version":3,"sources":["styles/dashboard.module.css","styles/searchBar.module.css","styles/login.module.css","components/Login.tsx","components/CoinCards.tsx","components/SearchBar.tsx","components/Dashboard.tsx","components/Error.tsx","App.tsx","index.tsx"],"names":["module","exports","Login","getID","getToken","getFirstTimeUser","getDataBaseCoins","useState","email","setEmail","password","setPassword","newUser","setNewUser","error","setError","subtitle","setSubtitle","authorized","setAuthorized","inputEmailRef","useRef","navigate","useNavigate","useEffect","current","focus","handleSubmit","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","json","userToken","data","token","userId","user","_id","Authorization","resp","console","log","coins","setTimeout","className","login","page","loginDiv","logo","title","subTitle","fields","inputError","fill","viewBox","d","ref","type","userInput","placeholder","onChange","event","target","value","onKeyDown","e","key","handleEnter","passInput","loginButton","onClick","signinButton","message","link","href","CoinCards","handleCloseCard","selectedCoins","coinCount","readyStockData","setReadyStockData","getSelectedCoinsData","a","length","symbolsRequested","join","options","url","params","symbols","axios","request","stockData","quoteResponse","result","map","each","name","shortName","symbol","price","regularMarketPrice","price_change","regularMarketChangePercent","style","color","float","cursor","fontSize","toFixed","SearchBar","handleCoinSelection","showDropdown","toogleShowDropdown","toogleRepeated","filteredData","setFilteredData","wordEntered","setWordEntered","handleFilter","searchWord","query","lang","newFilter","ResultSet","Result","SBstyle","id","stock","index","margin","Dashboard","firstTimeUser","dataBaseCoins","searchPlaceholder","setSearchPlaceholder","setSelectedCoins","loaderStyle","setLoaderStyle","setShowDropdown","setCoinCount","visibility","opacity","preDashboardStyle","setPreDashboardStyle","repeated","deactivateLoader","width","height","handleLogOut","tss","logout","userSelectedCoin","dataset","forEach","prevSelection","closeCard","currentTarget","attributes","filteredSelection","filter","Error","App","setId","setFirstTimeUser","setDataBaseCoins","setToken","path","element","receivedID","receivedToken","isFirstTime","DBCoins","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.936f6619.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderBg\":\"dashboard_loaderBg__3Mf41\",\"loader\":\"dashboard_loader__1q2NF\",\"configure-border-1\":\"dashboard_configure-border-1__2UteI\",\"configure-clockwise\":\"dashboard_configure-clockwise__EYM-a\",\"configure-border-2\":\"dashboard_configure-border-2__lMzGu\",\"configure-xclockwise\":\"dashboard_configure-xclockwise__1G3yM\",\"configure-core\":\"dashboard_configure-core__1PLai\",\"logout\":\"dashboard_logout__3jzZr\",\"glitch\":\"dashboard_glitch__GJCh8\",\"terminal\":\"dashboard_terminal__3vgsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInputs\":\"searchBar_searchInputs__Fh1io\",\"search\":\"searchBar_search__wRgQ7\",\"searchIcon\":\"searchBar_searchIcon__2c7l_\",\"dataResult\":\"searchBar_dataResult__34NjP\",\"dataItem\":\"searchBar_dataItem__G3QLH\",\"clearBtn\":\"searchBar_clearBtn__3_qCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"login_page__f8pDt\",\"loginDiv\":\"login_loginDiv__Ue1bm\",\"logo\":\"login_logo__1ISq4\",\"title\":\"login_title__Y8FFd\",\"subTitle\":\"login_subTitle__2toje\",\"fields\":\"login_fields__2nZoo\",\"email\":\"login_email__3iCZj\",\"password\":\"login_password__8mUnc\",\"signinButton\":\"login_signinButton__P_dDO\",\"loginButton\":\"login_loginButton__1w3XL\",\"link\":\"login_link__1z72o\",\"inputError\":\"login_inputError__2c7K_\"};","import {useRef, useState,useEffect} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport login from '../styles/login.module.css';\r\n\r\nexport default function Login({getID,getToken,getFirstTimeUser,getDataBaseCoins}:{getID:any,getToken:any,getFirstTimeUser:any,getDataBaseCoins:any}) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newUser, setNewUser] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [subtitle, setSubtitle] = useState(\"Welcome!\");\r\n  const [authorized, setAuthorized] = useState(false);\r\n\r\n  const inputEmailRef = useRef<HTMLInputElement>(null);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (authorized) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [authorized, navigate]);\r\n\r\n  useEffect(()=>{\r\n    if(inputEmailRef.current !== null){\r\n        inputEmailRef.current.focus()\r\n    }\r\n  },[])\r\n\r\n  const handleEmailChange = (event: any) => {\r\n    setEmail(event.target.value);\r\n    setError(false);\r\n  };\r\n\r\n  const handlePasswordChange = (event: any) => {\r\n    setPassword(event.target.value);\r\n    setError(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n\r\n    fetch(\"https://todgerapp.herokuapp.com/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 401) {\r\n        setNewUser(true);\r\n        setError(true);\r\n        setSubtitle(\"Check again or Sign Up!\");\r\n        return;\r\n      }\r\n\r\n      response.json().then((body) => {\r\n        const userToken = body.data.token;\r\n        const userId = body.data.user._id;\r\n        getID(userId);\r\n        getToken(userToken);\r\n        setSubtitle(\"Welcome back, come on in!\");\r\n\r\n        fetch(`https://todgerapp.herokuapp.com/getone/${userId}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: userToken,\r\n          },\r\n        })\r\n          .then((resp) => resp.json())\r\n\r\n          .then((body) => {\r\n            if (body.data === null) {\r\n              getFirstTimeUser(true);\r\n              console.log(`new user detected`);\r\n            } else if (body.data !== null) {\r\n              getDataBaseCoins(body.data.coins);\r\n              getFirstTimeUser(false);\r\n            }\r\n          });\r\n        setTimeout(() => {\r\n          setAuthorized(true);\r\n        }, 1000);\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleSignUp = (event: any) => {\r\n    fetch(\"https://todgerapp.herokuapp.com/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        if (body.message === \"user with that email exists\") {\r\n          setSubtitle(\"Email already exists!\");\r\n          setError(false);\r\n        } else if (body.message === \"user created successfully\") {\r\n          setSubtitle(\"Success! Now Login\");\r\n          setError(false);\r\n        } else if (body.message === \"Password must be non-empty.\") {\r\n          setSubtitle(\"❌ Password is empty!\");\r\n          setError(true);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleSignUp_anchor = (event: any) => {\r\n    setNewUser(true);\r\n  };\r\n\r\n  const handleEnter = (e:any) =>{\r\n    console.log(e.key)\r\n    if (e.key === \"Enter\"){\r\n        handleSubmit()        \r\n    }\r\n  }\r\n \r\n  return (\r\n    <section className={login.page}>\r\n      <div className={login.loginDiv}>\r\n        <div className={login.logo}></div>\r\n\r\n        <div className={login.title}>My Stock App</div>\r\n\r\n        <div className={login.subTitle}>{subtitle}</div>\r\n\r\n        <div className={login.fields}>\r\n          <div\r\n            className={\r\n              error ? login.email + \" \" + login.inputError : login.email\r\n            }\r\n          >\r\n            <svg fill=\"#999\" className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M12.075,10.812c1.358-0.853,2.242-2.507,2.242-4.037c0-2.181-1.795-4.618-4.198-4.618S5.921,4.594,5.921,6.775c0,1.53,0.884,3.185,2.242,4.037c-3.222,0.865-5.6,3.807-5.6,7.298c0,0.23,0.189,0.42,0.42,0.42h14.273c0.23,0,0.42-0.189,0.42-0.42C17.676,14.619,15.297,11.677,12.075,10.812 M6.761,6.775c0-2.162,1.773-3.778,3.358-3.778s3.359,1.616,3.359,3.778c0,2.162-1.774,3.778-3.359,3.778S6.761,8.937,6.761,6.775 M3.415,17.69c0.218-3.51,3.142-6.297,6.704-6.297c3.562,0,6.486,2.787,6.705,6.297H3.415z\"></path>\r\n            </svg>\r\n            <input\r\n              ref={inputEmailRef}\r\n              type=\"email\"\r\n              className={login.userInput}\r\n              placeholder=\"username\"\r\n              onChange={handleEmailChange}\r\n              value={email}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              error ? login.password + \" \" + login.inputError : login.password\r\n            }\r\n          >\r\n            <svg fill=\"#999\" className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M17.308,7.564h-1.993c0-2.929-2.385-5.314-5.314-5.314S4.686,4.635,4.686,7.564H2.693c-0.244,0-0.443,0.2-0.443,0.443v9.3c0,0.243,0.199,0.442,0.443,0.442h14.615c0.243,0,0.442-0.199,0.442-0.442v-9.3C17.75,7.764,17.551,7.564,17.308,7.564 M10,3.136c2.442,0,4.43,1.986,4.43,4.428H5.571C5.571,5.122,7.558,3.136,10,3.136 M16.865,16.864H3.136V8.45h13.729V16.864z M10,10.664c-0.854,0-1.55,0.696-1.55,1.551c0,0.699,0.467,1.292,1.107,1.485v0.95c0,0.243,0.2,0.442,0.443,0.442s0.443-0.199,0.443-0.442V13.7c0.64-0.193,1.106-0.786,1.106-1.485C11.55,11.36,10.854,10.664,10,10.664 M10,12.878c-0.366,0-0.664-0.298-0.664-0.663c0-0.366,0.298-0.665,0.664-0.665c0.365,0,0.664,0.299,0.664,0.665C10.664,12.58,10.365,12.878,10,12.878\"></path>\r\n            </svg>\r\n            <input\r\n              onKeyDown={(e)=>handleEnter(e)}  \r\n              type=\"password\"\r\n              className={login.passInput}\r\n              placeholder=\"password\"\r\n              onChange={handlePasswordChange}\r\n              value={password}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button className={login.loginButton} onClick={handleSubmit}>\r\n          Login\r\n        </button>\r\n\r\n        {newUser && (\r\n          <button className={login.signinButton} onClick={handleSignUp}>\r\n            Sign Up\r\n          </button>\r\n        )}\r\n\r\n        {!newUser && (\r\n          <div className={login.link}>\r\n            <a href=\"/login\">Forgot password?</a> or{\" \"}\r\n            <span onClick={handleSignUp_anchor}>Sign Up</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport { FaCheckCircle } from \"react-icons/fa\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function CoinCards({\r\n  handleCloseCard,\r\n  selectedCoins,\r\n  coinCount,\r\n}: {\r\n  handleCloseCard: any;\r\n  selectedCoins: string[];\r\n  coinCount: number;\r\n}) {\r\n  const [readyStockData, setReadyStockData] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const getSelectedCoinsData = async () => {\r\n      if (selectedCoins.length !== 0) {\r\n        const symbolsRequested = selectedCoins.join();\r\n        const options: any = {\r\n          method: \"GET\",\r\n          url: \"https://stock-data-yahoo-finance-alternative.p.rapidapi.com/v6/finance/quote\",\r\n          params: { symbols: symbolsRequested },\r\n          headers: {\r\n            \"x-rapidapi-host\":\r\n              \"stock-data-yahoo-finance-alternative.p.rapidapi.com\",\r\n            \"x-rapidapi-key\":\r\n              \"31b063a22amsh21c752170e3beeep1f4046jsn4f0ce84b4d68\",\r\n          },\r\n        };\r\n\r\n        const response = await axios.request(options);\r\n\r\n        const stockData: object[] = response.data.quoteResponse.result.map(\r\n          (each: any) => {\r\n            return {\r\n              name: each.shortName,\r\n              symbol:each.symbol,\r\n              price: each.regularMarketPrice,\r\n              price_change: each.regularMarketChangePercent,\r\n            };\r\n          }\r\n        );\r\n\r\n        return stockData;\r\n      } else {\r\n        return [];\r\n      }\r\n    };\r\n    getSelectedCoinsData().then((response: any) => setReadyStockData(response));\r\n  }, [selectedCoins]);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"Dashboard_subtitle\">\r\n        My Dashboard{\" \"}\r\n        {coinCount === 8 ? (\r\n          <FaCheckCircle style={{ color: \"rgb(81, 202, 70)\" }} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </h3>\r\n      <div className=\"coinCards\">\r\n        <div className=\"section_our_solution\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n              <div className=\"our_solution_category\">\r\n                <div className=\"solution_cards_box\">\r\n                  {readyStockData.map((each: any) => (\r\n                    <div key={each.name} className=\"solution_card\">\r\n                      <div className=\"hover_color_bubble\"></div>\r\n                      <div data-value={each.symbol} onClick={handleCloseCard}>\r\n                        <CloseIcon\r\n                          style={{\r\n                            float: \"right\",\r\n                            color: \"rgb(230, 230, 230)\",\r\n                            cursor: \"pointer\",\r\n                            fontSize:\"1.2rem\"\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"solu_title\">\r\n                        <h3>{each.name},({each.symbol})</h3>\r\n                      </div>\r\n                      <div className=\"solu_description\">\r\n                        <p>{each.price} $</p>\r\n                        <p\r\n                          style={\r\n                            each.price_change < 0\r\n                              ? { color: \"red\" }\r\n                              : { color: \"green\" }\r\n                          }\r\n                        >\r\n                          {each.price_change.toFixed(2)} %\r\n                        </p>\r\n                        {/* <button type=\"button\" className=\"read_more_btn\">\r\n                          Show Grap\r\n                        </button> */}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}","import { useState } from \"react\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport SBstyle from '../styles/searchBar.module.css';\r\nimport axios from 'axios';\r\n\r\nfunction SearchBar(\r\n    { placeholder,handleCoinSelection,showDropdown,toogleShowDropdown,toogleRepeated }:\r\n    { placeholder:any,handleCoinSelection:any,showDropdown:any,toogleShowDropdown:any,toogleRepeated:any}) {\r\n\r\n  const [filteredData, setFilteredData] = useState([] as any[]);\r\n  const [wordEntered, setWordEntered] = useState(\"\");\r\n\r\n\r\n  const handleFilter = async (event:any) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n\r\n    const options:any = {\r\n      method: 'GET',\r\n      url: 'https://stock-data-yahoo-finance-alternative.p.rapidapi.com/v6/finance/autocomplete',\r\n      params: {query: searchWord, lang: 'en'},\r\n      headers: {\r\n        'x-rapidapi-host': 'stock-data-yahoo-finance-alternative.p.rapidapi.com',\r\n        'x-rapidapi-key': '31b063a22amsh21c752170e3beeep1f4046jsn4f0ce84b4d68'\r\n      }\r\n    };\r\n\r\n    const response:any = await axios.request(options)\r\n\r\n\r\n    const newFilter:string[] = response.data.ResultSet.Result.map((each:any)=>{\r\n      return {\r\n        name:each.name,\r\n        symbol:each.symbol\r\n      }\r\n    }) \r\n\r\n    console.log(newFilter)\r\n\r\n    if (searchWord === \"\") {\r\n      setFilteredData([]);\r\n    } else {\r\n      setFilteredData(newFilter);\r\n    }\r\n    toogleShowDropdown()\r\n    toogleRepeated();\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setFilteredData([]);\r\n    setWordEntered(\"\");\r\n  };\r\n\r\n\r\n\r\n  return (\r\n  \r\n    <div className={SBstyle['search']}>\r\n      <div className={SBstyle['searchInputs']}>\r\n        <input \r\n          type=\"text\"\r\n          placeholder={placeholder}\r\n          value={wordEntered}\r\n          onChange={handleFilter}\r\n        />\r\n        <div className={SBstyle[\"searchIcon\"]}>\r\n          {filteredData.length === 0 ? (\r\n            <SearchIcon />\r\n          ) : (\r\n            <CloseIcon id=\"clearBtn\" onClick={clearInput} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {(filteredData.length !== 0 && showDropdown) && (\r\n        <div className={SBstyle[\"dataResult\"]}>\r\n          {filteredData.map((stock, index) => {\r\n            return (\r\n              <div data-value={stock.symbol} key={index} className={SBstyle[\"dataItem\"]} onClick={handleCoinSelection}>\r\n                <p data-value={stock.symbol} >{stock.name} </p>\r\n                <p data-value={stock.symbol} style = {{margin:\"0 8px 0 0\"}}>{stock.symbol} </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","// import axios from 'axios';\r\nimport {useEffect,useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport tss from '../styles/dashboard.module.css';\r\nimport CoinCards from './CoinCards';\r\nimport SearchBar from './SearchBar';\r\n\r\n\r\nfunction Dashboard({id,token,firstTimeUser,dataBaseCoins}:{id:string,token:string,firstTimeUser:boolean,dataBaseCoins:any}) {\r\n\r\n    const [searchPlaceholder, setSearchPlaceholder] = useState('Search for stock here');\r\n    const [selectedCoins, setSelectedCoins] = useState<string[]>(dataBaseCoins); //el estado inicial es proveido por el fetch a /getone desde servidor\r\n    const [loaderStyle, setLoaderStyle] = useState({});\r\n    const [showDropdown, setShowDropdown] = useState<boolean>(true);\r\n    const [coinCount, setCoinCount] = useState(0+dataBaseCoins.length);\r\n    const [preDashboardStyle, setPreDashboardStyle] = useState<object>({visibility:'hidden',opacity:0})\r\n\r\n    let repeated:boolean = false;\r\n    let navigate = useNavigate();\r\n\r\n    useEffect(()=>{\r\n        deactivateLoader()\r\n    },[])\r\n\r\n    const deactivateLoader=() =>{\r\n        setTimeout(()=>{\r\n            setLoaderStyle({\r\n                visibility:'hidden',\r\n                opacity:0,\r\n                width:0,\r\n                height:0\r\n            }) \r\n            setPreDashboardStyle({\r\n                visibility:'visible',\r\n                opacity:1,\r\n            })\r\n         },4000)\r\n    }\r\n\r\n    const handleCoinSelection = (event:any) =>{\r\n\r\n        const userSelectedCoin = event.target.dataset.value;\r\n\r\n        selectedCoins.forEach((each:string)=>{\r\n            if(each===userSelectedCoin){\r\n                repeated = true;\r\n            }\r\n        })\r\n        if(repeated) {\r\n            setShowDropdown(false)\r\n            return\r\n        }\r\n        if(coinCount===8){\r\n            setShowDropdown(false)\r\n            setSearchPlaceholder(\"Search here\")\r\n            return\r\n        }\r\n        setSelectedCoins((prevSelection:any)=>[...prevSelection,userSelectedCoin]);\r\n        setCoinCount(coinCount+1);  \r\n    } \r\n\r\n\r\n    const handleCloseCard = (event:any) => {\r\n        const closeCard = event.currentTarget.attributes['data-value'].value;\r\n        const filteredSelection = selectedCoins.filter((each:string)=>{\r\n            return each !== closeCard;\r\n        })\r\n        setSelectedCoins(filteredSelection);\r\n        setCoinCount(coinCount-1);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(selectedCoins)\r\n    },[selectedCoins])\r\n\r\n    const toogleShowDropdown = () =>{\r\n        setShowDropdown(true);\r\n    }\r\n\r\n    const toogleRepeated = () => {\r\n        repeated = false\r\n    }\r\n\r\n\r\n    const handleLogOut = async () =>{\r\n\r\n\r\n        try{\r\n\r\n            if(firstTimeUser){\r\n                await fetch('https://todgerapp.herokuapp.com/todos',{\r\n                    method:'POST',\r\n                    headers:{\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                       _id:id,\r\n                       coins:selectedCoins\r\n                    })\r\n                })\r\n            } else {\r\n                console.log('updating coins... ')\r\n                fetch(`https://todgerapp.herokuapp.com/getone/${id}`,{\r\n                    method:'POST',  \r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization':token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        coins:selectedCoins\r\n                     })\r\n            })\r\n            }\r\n            navigate('/login')\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n     \r\n    return (\r\n    <>  \r\n\r\n        <div className={tss[\"loaderBg\"]} style={loaderStyle}>\r\n            <div className={tss[\"loader\"]} >\r\n                <div className={tss[\"spinner-box\"]}>\r\n                    <div className={tss[\"configure-border-1\"]}>  \r\n                    <div className={tss[\"configure-core\"]}></div>\r\n                    </div>  \r\n                    <div className={tss[\"configure-border-2\"]}>\r\n                    <div className={tss[\"configure-core\"]}></div>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div style={preDashboardStyle}>\r\n            <button onClick={handleLogOut} className={tss.logout}>Log Out</button>\r\n            <SearchBar  \r\n                handleCoinSelection={handleCoinSelection}  \r\n                placeholder={searchPlaceholder}\r\n                showDropdown={showDropdown}\r\n                toogleShowDropdown={toogleShowDropdown}\r\n                toogleRepeated={toogleRepeated} />\r\n            <div className=\"selectedCoins\">\r\n            <CoinCards \r\n                handleCloseCard={handleCloseCard} \r\n                coinCount={coinCount} \r\n                selectedCoins={selectedCoins}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    </>   \r\n    )\r\n}\r\n\r\nexport default Dashboard","\r\nfunction Error() {\r\n    return (\r\n        <div>\r\n            OH OH! LOOKS LOKE YOU ARE LOST..\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\r\nimport {useState} from 'react'\r\nimport Login from './components/Login';\r\nimport Dashboard from './components/Dashboard';\r\nimport Error from './components/Error';\r\n\r\nfunction App() {\r\n\r\n  const [id, setId] = useState('');\r\n  const [firstTimeUser, setFirstTimeUser] = useState(false)\r\n  const [dataBaseCoins, setDataBaseCoins] = useState([]);\r\n  const [token,setToken] = useState('');\r\n\r\n  const getToken = (receivedToken:string) => {\r\n    setToken(receivedToken)\r\n  }\r\n\r\n  const getFirstTimeUser = (isFirstTime:boolean) =>{\r\n    setFirstTimeUser(isFirstTime);\r\n  }\r\n\r\n  const getID =(receivedID:string) =>{\r\n    setId(receivedID)\r\n  }\r\n\r\n  const getDataBaseCoins=(DBCoins:any) =>{\r\n    setDataBaseCoins(DBCoins)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <Routes>\r\n          <Route  path=\"/login\" element={<Login getID={getID} getToken={getToken} getFirstTimeUser={getFirstTimeUser} getDataBaseCoins={getDataBaseCoins} />}/>\r\n          <Route  path=\"/dashboard\" element={<Dashboard id={id} token={token} firstTimeUser={firstTimeUser} dataBaseCoins={dataBaseCoins}/>}/>\r\n          <Route  path=\"*\" element={<Error/>} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}